<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://127.0.0.1:3306/test?characterEncoding=utf8" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--dataSource属性指定要用到的连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!--configLocation属性指定mybatis的核心配置文件 -->
		<property name="configLocation" value="classpath:mybatis_spring/Configuration.xml" />
	</bean>

	<!--sqlSessionFactory属性指定要用到的SqlSessionFactory实例 -->
	<!--mapperInterface属性指定映射器接口，用于实现此接口并生成映射器对象 -->
	<!-- <bean id="userDaoMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> 
		<property name="sqlSessionFactory" ref="sqlSessionFactory" /> <property name="mapperInterface" 
		value="com.cmy.mybatis.spring.UserDaoMapper" /> </bean> <bean id="groupDaoMapper" 
		class="org.mybatis.spring.mapper.MapperFactoryBean"> <property name="sqlSessionFactory" 
		ref="sqlSessionFactory" /> <property name="mapperInterface" value="com.cmy.mybatis.spring.GroupDaoMapper" 
		/> </bean> <bean id="articleDaoMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> 
		<property name="sqlSessionFactory" ref="sqlSessionFactory" /> <property name="mapperInterface" 
		value="com.cmy.mybatis.spring.ArticleDaoMapper" /> </bean> -->

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--basePackage指定要扫描的包，在此包之下的映射器都会被搜索到。可指定多个包，包与包之间用逗号或分号分隔 -->
		<property name="basePackage" value="com.cmy.mybatis.spring" />
	</bean>


	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!--所有以find开头的方法都是只读的 -->
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" propagation="REQUIRED"  rollback-for="Exception"/>
			<!--其他方法使用默认事务策略 -->
			<!-- <tx:method name="*" /> -->
		</tx:attributes>
	</tx:advice>
	
	<!-- AOP配置 -->
	<aop:config>
		<!--pointcut元素定义一个切入点，execution中的第一个星号 用以匹配方法的返回类型，这里星号表明匹配所有返回类型。 com.cmy.mybatis.*.*(..)表明匹配com.cmy.mybatis包下的所有类的所有 
			方法 -->
		<aop:pointcut id="myPointcut" expression="execution(* com.cmy.mybatis.spring.*.*(..))" />
		<!--将定义好的事务处理策略应用到上述的切入点 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="myPointcut" />
	</aop:config>
	
	<bean id="userDao" class="com.cmy.mybatis.spring.UserDao" />

</beans>